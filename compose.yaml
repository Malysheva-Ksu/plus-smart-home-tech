version: '3.8'

services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.3
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 5s
      timeout: 10s
      retries: 5

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      schema-registry:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        cub kafka-ready -b kafka:29092 1 20 &&
        echo 'Kafka is ready!' &&
      
        echo 'Creating topics...' &&
        kafka-topics --create --topic telemetry.sensors.v1 \
                     --partitions 1 --replication-factor 1 --if-not-exists \
                     --bootstrap-server kafka:29092 &&
        kafka-topics --create --topic telemetry.snapshots.v1 \
                     --partitions 1 --replication-factor 1 --if-not-exists \
                     --bootstrap-server kafka:29092 &&
        kafka-topics --create --topic telemetry.hubs.v1 \
                     --partitions 1 --replication-factor 1 --if-not-exists \
                     --bootstrap-server kafka:29092 &&
        echo 'Topics created successfully.'
      "

  collector-service:
    container_name: collector-service
    build:
      context: ./telemetry/collector
    ports:
      - "8080:8080"
    depends_on:
      - kafka-init-topics
    environment:
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_KAFKA_PRODUCER_PROPERTIES_SCHEMA_REGISTRY_URL=http://schema-registry:8081